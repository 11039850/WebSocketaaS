apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper
  name: zookeeper
spec:
  ports:
    - name: "32181"
      port: 32181
      targetPort: 32181
  selector:
    app: zookeeper

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: zookeeper
    group: linker
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper
        group: linker
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 32181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "32181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  ports:
    - name: "29092"
      port: 29092
      targetPort: 29092
  selector:
    app: kafka

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka
    group: linker
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka
        group: linker
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 29092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:32181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:29092"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
      restartPolicy: Always
      initContainers:
        - name: init-zookeeper
          image: busybox
          command: ['sh', '-c', 'until nslookup zookeeper; do echo waiting for zookeeper; sleep 2; done;']


---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: nats
  name: nats
spec:
  ports:
    - name: "8222"
      port: 8222
      targetPort: 8222
    - name: "4222"
      port: 4222
      targetPort: 4222
  selector:
    app: nats

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nats
    group: linker
  name: nats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nats
        group: linker
    spec:
      containers:
        - name: nats
          image: nats:latest
          imagePullPolicy: Always
          ports:
            - name: "port8222"
              containerPort: 8222
              protocol: TCP
            - name: "port4222"
              containerPort: 4222
              protocol: TCP
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    app: redis

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
    group: linker
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
        group: linker
    spec:
      containers:
        - name: redis
          image: redis
          imagePullPolicy: Always
          ports:
            - containerPort: 6379
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    app: mongo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
    group: linker
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongo
        group: linker
    spec:
      containers:
        - name: mongo
          image: mongo
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
      restartPolicy: Always
